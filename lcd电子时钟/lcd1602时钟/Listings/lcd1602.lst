C51 COMPILER V9.60.7.0   LCD1602                                                           04/14/2023 23:38:50 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\lcd1602.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE users\src\lcd1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\users\inc) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\lcd1602.lst) TABS(2) OBJECT(.\Objects\lcd1602.obj)

line level    source

   1          #include "common.h"
   2          
   3          void lcd1602_init()
   4          {
   5   1          LCD1602_RW = 0;
   6   1          LCD1602_E = 0;
   7   1      
   8   1          lcd1602_write4bits(0x33, LCD1602_WRITE_COMMAND);
   9   1          lcd1602_write4bits(0x32, LCD1602_WRITE_COMMAND);
  10   1          lcd1602_write4bits(0x28, LCD1602_WRITE_COMMAND);
  11   1          lcd1602_write4bits(0x0c, LCD1602_WRITE_COMMAND);
  12   1          lcd1602_write4bits(0x06, LCD1602_WRITE_COMMAND);
  13   1          lcd1602_clear();
  14   1      
  15   1          lcd1602_message("Autor:Wuhuafeng\nGit:famercoder");
  16   1          delay_ms(3000);
  17   1      
  18   1          lcd1602_clear(); 
  19   1      }
  20          
  21          void lcd1602_write4bits(uchar bits, bit mode)
  22          {
  23   1          while(lcd1602_busy());
  24   1          LCD1602_RS = mode;
  25   1          _nop_();
  26   1      
  27   1          P0 &= 0x0f; 
  28   1          P0 |= (bits & 0xf0);
  29   1          lcd1602_pulseenable();
  30   1      
  31   1          P0 &= 0x0f;
  32   1          P0 |= (bits << 4) & 0xf0;
  33   1          lcd1602_pulseenable();
  34   1      }
  35          
  36          void lcd1602_setcursor(uchar row, uchar col)
  37          {
  38   1          uchar offsets[] = {0x00, 0x40, 0x14, 0x54};
  39   1          lcd1602_write4bits(0x80 | (col + offsets[row]), LCD1602_WRITE_COMMAND);
  40   1      }
  41          
  42          void lcd1602_message(char* message)
  43          {
  44   1          char* p = message;
  45   1          while(*p != '\0')
  46   1          {
  47   2              if (*p == '\n') lcd1602_write4bits(0xc0, LCD1602_WRITE_COMMAND);
  48   2              else            lcd1602_write4bits(*p, LCD1602_WRITE_DATA);
  49   2              p++;
  50   2          }
  51   1      }
  52          
  53          void lcd1602_clear()
  54          {
C51 COMPILER V9.60.7.0   LCD1602                                                           04/14/2023 23:38:50 PAGE 2   

  55   1          lcd1602_write4bits(0x01, LCD1602_WRITE_COMMAND);
  56   1          delay_ms(5);
  57   1      }
  58          
  59          void lcd1602_pulseenable()
  60          {
  61   1          LCD1602_E = 0;
  62   1          _nop_();
  63   1          LCD1602_E = 1;
  64   1          _nop_();
  65   1          _nop_();
  66   1          LCD1602_E = 0;
  67   1          _nop_();
  68   1          _nop_();
  69   1      }
  70          
  71          bit  lcd1602_busy()
  72          {
  73   1        bit result = 0;
  74   1      //  LCD1602_RS = 0;
  75   1      //  LCD1602_RW = 1;
  76   1      //  LCD1602_E = 1;
  77   1      //  _nop_();
  78   1      //  _nop_();
  79   1      //  _nop_();
  80   1      //  _nop_();
  81   1      //  result = (bit)(P0 & 0x80);   
  82   1      //  LCD1602_E = 0;
  83   1      //  LCD1602_RW = 0;
  84   1          return result;
  85   1      }
  86          
  87          void lcd1602_display_time(uchar row, uchar col, Environment information)
  88          {
  89   1          uchar displayValues[6] = {0};
  90   1          char message[] = "Time:xx:xx:xx";
  91   1      
  92   1          displayValues[0] = information.hour / 10;
  93   1          displayValues[1] = information.hour % 10;
  94   1          displayValues[2] = information.min / 10;
  95   1          displayValues[3] = information.min % 10;
  96   1          displayValues[4] = information.sec / 10;
  97   1          displayValues[5] = information.sec % 10;
  98   1      
  99   1          if (information.hour == SETTING_DAT) 
 100   1          {
 101   2              message[5] = 'n';
 102   2              message[6] = 'n';
 103   2          }
 104   1      
 105   1          if (information.min == SETTING_DAT) 
 106   1          {
 107   2              message[8] = 'n';
 108   2              message[9] = 'n';
 109   2          }
 110   1      
 111   1          if (information.sec == SETTING_DAT) 
 112   1          {
 113   2              message[11] = 'n';
 114   2              message[12] = 'n';
 115   2          }
 116   1      
C51 COMPILER V9.60.7.0   LCD1602                                                           04/14/2023 23:38:50 PAGE 3   

 117   1          lcd1602_format_display(row, col, displayValues, message, sizeof(message) / sizeof(char));
 118   1      }
 119          
 120          void lcd1602_display_date(uchar row, uchar col, Environment information)
 121          {
 122   1          uchar displayValues[6] = {0};
 123   1          char message[] = "Date:xx/xx/xx";
 124   1      
 125   1          displayValues[0] = information.year / 10;
 126   1          displayValues[1] = information.year % 10;
 127   1          displayValues[2] = information.mon / 10;
 128   1          displayValues[3] = information.mon % 10;
 129   1          displayValues[4] = information.day / 10;
 130   1          displayValues[5] = information.day % 10;
 131   1      
 132   1          if (information.year == SETTING_DAT)
 133   1          {
 134   2              message[5] = 'n';
 135   2              message[6] = 'n';
 136   2          }
 137   1      
 138   1          if (information.mon == SETTING_DAT)
 139   1          {
 140   2              message[8] = 'n';
 141   2              message[9] = 'n';
 142   2          }
 143   1      
 144   1          if (information.day == SETTING_DAT)
 145   1          {
 146   2              message[11] = 'n';
 147   2              message[12] = 'n';
 148   2          }
 149   1      
 150   1          lcd1602_format_display(row, col, displayValues, message, sizeof(message) / sizeof(char)); 
 151   1      }
 152          
 153          void lcd1602_display_temperature(uchar row, uchar col, Environment information)
 154          {
 155   1          uchar displayValues[4] = {0};
 156   1          char message[] = "Temp:xx.xx C";
 157   1      
 158   1          displayValues[0] = information.temperature[0] / 10;
 159   1          displayValues[1] = information.temperature[0] % 10;
 160   1          displayValues[2] = information.temperature[1] / 10;
 161   1          displayValues[3] = information.temperature[1] % 10;
 162   1          lcd1602_format_display(row, col, displayValues, message, sizeof(message) / sizeof(char)); 
 163   1      }
 164          
 165          void lcd1602_display_humidity(uchar row, uchar col, Environment information)
 166          {
 167   1          uchar displayValues[4] = {0};
 168   1          char message[] = "Humi:xx.xx %";
 169   1      
 170   1          displayValues[0] = information.humidity[0] / 10;
 171   1          displayValues[1] = information.humidity[0] % 10;
 172   1          displayValues[2] = information.humidity[1] / 10;
 173   1          displayValues[3] = information.humidity[1] % 10;
 174   1          lcd1602_format_display(row, col, displayValues, message, sizeof(message) / sizeof(char));
 175   1      }
 176          
 177          void lcd1602_display(enum DisplayMode dispMode, Environment information)
 178          {
C51 COMPILER V9.60.7.0   LCD1602                                                           04/14/2023 23:38:50 PAGE 4   

 179   1          static enum DisplayMode lastDispMode = eDisplayMode_dateTime;
 180   1          if (lastDispMode != dispMode)
 181   1          {
 182   2              lcd1602_clear();
 183   2              delay_ms(300);
 184   2          }
 185   1      
 186   1          lastDispMode = dispMode;
 187   1          switch (dispMode)
 188   1          {
 189   2              case eDisplayMode_dateTime:
 190   2              {
 191   3                  lcd1602_display_date(0, 0, information);
 192   3                  lcd1602_display_time(1, 0, information);
 193   3                  break;
 194   3              }
 195   2              case eDisplayMode_tpHumi:
 196   2              {
 197   3                  lcd1602_display_temperature(0, 0, information);
 198   3                  lcd1602_display_humidity(1, 0, information);
 199   3                  break;
 200   3              }
 201   2              default:
 202   2              {
 203   3                  lcd1602_clear();
 204   3                  lcd1602_message("Error --->\n  SunFounder");
 205   3                  break;
 206   3              }
 207   2          }
 208   1      }
 209          
 210          void lcd1602_display_setting(Environment information, enum SettingMode settingMode)
 211          {
 212   1          switch (settingMode)
 213   1          {
 214   2              case eSetting_year: information.year = SETTING_DAT; break;
 215   2              case eSetting_mon:  information.mon = SETTING_DAT;  break;
 216   2              case eSetting_day:  information.day = SETTING_DAT;  break;  
 217   2              case eSetting_hour: information.hour = SETTING_DAT; break;   
 218   2              case eSetting_min:  information.min = SETTING_DAT;  break;
 219   2              case eSetting_sec:  information.sec = SETTING_DAT;  break;
 220   2          }
 221   1      
 222   1          if (settingMode == eSetting_year || settingMode == eSetting_mon || settingMode == eSetting_day)
 223   1          {
 224   2              lcd1602_display_date(0, 0, information);
 225   2              return;
 226   2          }
 227   1      
 228   1          if (settingMode == eSetting_hour || settingMode == eSetting_min || settingMode == eSetting_sec)
 229   1          {
 230   2              lcd1602_display_time(1, 0, information);
 231   2              return;
 232   2          }     
 233   1      }
 234          
 235          void lcd1602_format_display(uchar row, uchar col, uchar displayValues[], char message[], uchar messageLen)
 236          {
 237   1          uchar i = 0, pos = 0;
 238   1          for (i = 0; i < messageLen; i++)
 239   1          {
 240   2              if (message[i] == 'x')
C51 COMPILER V9.60.7.0   LCD1602                                                           04/14/2023 23:38:50 PAGE 5   

 241   2              {
 242   3                  message[i] = displayValues[pos]+'0';
 243   3                  pos++;
 244   3                  continue;
 245   3              }
 246   2      
 247   2              if (message[i] == 'n')
 248   2              {
 249   3                  message[i] = ' ';
 250   3                  pos++;
 251   3                  continue;
 252   3              }
 253   2          }
 254   1      
 255   1          lcd1602_setcursor(row, col);
 256   1          lcd1602_message(message);     
 257   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1110    ----
   CONSTANT SIZE    =    133    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1     163
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
